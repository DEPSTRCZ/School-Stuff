import random
# Make class Point which would work as a point in google maps. It should have attributes latitude and longitude. etc.
# Make class Route which would work as a route in google maps. It should have attributes start, finish and length. etc.
# Class ROute would create a route based on points and provide some functions. Use lib geodesic
distances = {("Praha", "Brno"): 210,
    ("Praha", "Plzeň"): 90,
    ("Praha", "Ostrava"): 360,
    ("Brno", "Ostrava"): 170,
    ("Brno", "Plzeň"): 220,
    ("Plzeň", "Ostrava"): 380,
    ("Plzeň", "Liberec"): 130,
    ("Liberec", "Ostrava"): 220,
    ("Liberec", "České Budějovice"): 200,
    ("České Budějovice", "Ostrava"): 360,
} # Generated by ChatGPT

class Route:
    def __init__(self, start = "", finish = "", length = 0):
        self.start = start
        self.finish = finish
        self.length = length
    
    def setStart(self, start):
        self.start = start

    def setFinish(self, finish):
        self.finish = finish

    def GetDistance(self):
        if self.length != 0:
            return self.length
        elif self.start != "" and self.finish != "":
            try:
                self.length = distances[(self.start, self.finish)]
            except KeyError:
                self.length = distances[(self.finish, self.start)]
            return self.lengt
        else:
            raise ValueError("You must set start and finish")


    def SetRandomRoute(self):
        __route = random.choice(list(distances.keys()))
        self.start = __route[0]
        self.finish = __route[1]
        self.length = distances[__route]

class Car:
    def __init__(self, manufacturer = "", model = "", distance = 0):
        self.manufacturer = ""
    pass

dev = Route()
dev.SetRandomRoute()
print(dev.GetDistance())
